{"mappings":"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","sources":["src/js/index.js"],"sourcesContent":["class DrawingBoard {\n    MODE = \"NONE\"; // NONE BRUSH ERASER\n    isMouseDown = false;\n    eraserColor = \"#FFFFFF\";\n    isNavigatorVisible = false;\n    undoArray = [];\n    containerEl;\n    canvasEl;\n    toolbarEl;\n    brushEl;\n    eraserEl;\n    colorPickerEl;\n    brushPanelEl;\n    brushSliderEl;\n    brushSizePreviewEl;\n    navigatorEl;\n    navigatorImageContainer;\n    navigatorImageEl;\n    undoEl;\n    clearEl;\n    downloadLinkEl;\n    constructor() {\n        this.assignElement();\n        this.initContext();\n        this.initCanvasBackGround();\n        this.addEvent();\n    }\n\n    assignElement() {\n        this.containerEl = document.getElementById(\"container\");\n        this.canvasEl = this.containerEl.querySelector(\"#canvas\");\n        this.toolbarEl = this.containerEl.querySelector(\"#toolbar\");\n        this.brushEl = this.toolbarEl.querySelector(\"#brush\");\n        this.eraserEl = this.toolbarEl.querySelector(\"#eraser\");\n        this.colorPickerEl = this.toolbarEl.querySelector(\"#colorPicker\");\n        this.brushPanelEl = this.containerEl.querySelector(\"#brushPanel\");\n        this.brushSliderEl = this.brushPanelEl.querySelector(\"#brushSize\");\n        this.brushSizePreviewEl = this.brushPanelEl.querySelector(\"#brushSizePreview\");\n        this.navigatorEl = this.toolbarEl.querySelector(\"#navigator\");\n        this.navigatorImageContainer = this.containerEl.querySelector(\"#imgNav\");\n        this.navigatorImageEl = this.navigatorImageContainer.querySelector(\"#canvasImg\");\n        this.undoEl = this.toolbarEl.querySelector(\"#undo\");\n        this.clearEl = this.toolbarEl.querySelector(\"#clear\");\n        this.downloadLinkEl = this.toolbarEl.querySelector(\"#download\");\n    }\n    initContext() {\n        this.context = this.canvasEl.getContext(\"2d\");\n    }\n    initCanvasBackGround() {\n        this.context.fillStyle = \"#FFFFFF\";\n        this.context.fillRect(0, 0, this.canvasEl.width, this.canvasEl.height);\n    }\n    addEvent() {\n        this.brushEl.addEventListener(\"click\", this.onClickBrush.bind(this));\n        this.canvasEl.addEventListener(\"mousedown\", this.onMouseDown.bind(this));\n        this.canvasEl.addEventListener(\"mousemove\", this.onMouseMove.bind(this));\n        this.canvasEl.addEventListener(\"mouseup\", this.onMouseUp.bind(this));\n        this.canvasEl.addEventListener(\"mouseout\", this.onMouseOut.bind(this));\n        this.brushSliderEl.addEventListener(\"input\", this.onChangeBrushSize.bind(this));\n        this.colorPickerEl.addEventListener(\"input\", this.onChangeColor.bind(this));\n        this.eraserEl.addEventListener(\"click\", this.onClickEraser.bind(this));\n        this.navigatorEl.addEventListener(\"click\", this.onClickNavigator.bind(this));\n        this.undoEl.addEventListener(\"click\", this.onClickUndo.bind(this));\n        this.clearEl.addEventListener(\"click\", this.onClickClear.bind(this));\n        this.downloadLinkEl.addEventListener(\"click\", this.onClickDownload.bind(this));\n    }\n    onClickDownload(event) {\n        this.downloadLinkEl.href = this.canvasEl.toDataURL(\"image/jpeg\", 1);\n        this.downloadLinkEl.download = \"example.jpeg\";\n    }\n    onClickClear(event) {\n        this.context.clearRect(0, 0, this.canvasEl.width, this.canvasEl.height);\n        this.undoArray.length = 0;\n        this.updateNavigator();\n        this.initCanvasBackGround();\n    }\n    onClickUndo(event) {\n        if (this.undoArray.length === 0)    return;\n        let previousDataUrl = this.undoArray.pop();\n        let previousImage = new Image();\n        previousImage.onload = () => {\n            this.context.clearRect(0, 0, this.canvasEl.width, this.canvasEl.height);\n            this.context.drawImage(previousImage, 0, 0, this.canvasEl.width, this.canvasEl.height, 0, 0, this.canvasEl.width, this.canvasEl.height);\n        };\n        previousImage.src = previousDataUrl;\n    }\n    saveState(event) {\n        if (this.undoArray.length > 5)  this.undoArray.shift();\n        this.undoArray.push(this.canvasEl.toDataURL());\n    }\n    onClickNavigator(event) {\n        this.isNavigatorVisible = !event.currentTarget.classList.contains(\"active\");\n        event.currentTarget.classList.toggle(\"active\");\n        this.navigatorImageContainer.classList.toggle(\"hide\");\n        this.updateNavigator();\n    }\n    updateNavigator() {\n        if (!this.isNavigatorVisible)   return;\n        this.navigatorImageEl.src = this.canvasEl.toDataURL();\n    }\n    onClickEraser(event) {\n        const isActive = event.currentTarget.classList.contains(\"active\");\n        this.MODE = isActive ? \"NONE\" : \"ERASER\";\n        this.canvasEl.style.cursor = isActive ? \"default\" : \"crosshair\";\n        this.brushPanelEl.classList.add(\"hide\");\n        event.currentTarget.classList.toggle(\"active\");\n        this.brushEl.classList.remove(\"active\");\n    }\n    onMouseOut(event) {\n        if (this.MODE === \"NONE\")   return;\n        this.isMouseDown = false;\n        this.updateNavigator();\n    }\n    onChangeColor(event) {\n        this.brushSizePreviewEl.style.background = event.target.value;\n    }\n    onChangeBrushSize(event) {\n        this.brushSizePreviewEl.style.width = `${event.target.value}px`;\n        this.brushSizePreviewEl.style.height = `${event.target.value}px`;\n    }\n    onMouseUp(event) {\n        if (this.MODE === \"NONE\")   return;\n        this.isMouseDown = false;   \n        this.updateNavigator();   \n    }\n    onMouseMove(event) {\n        if (!this.isMouseDown)   return;\n        const currentPosition = this.getMousePosition(event);\n        this.context.lineTo(currentPosition.x, currentPosition.y);\n        this.context.stroke();        \n    }\n    onMouseDown(event) {\n        if (this.MODE === \"NONE\")   return;\n        this.isMouseDown = true;\n        const currentPosition = this.getMousePosition(event);\n        this.context.beginPath();\n        this.context.moveTo(currentPosition.x, currentPosition.y);\n        this.context.lineCap = \"round\";\n        if (this.MODE === \"BRUSH\") {\n            this.context.strokeStyle = this.colorPickerEl.value;\n            this.context.lineWidth = this.brushSliderEl.value;\n        } else if (this.MODE === \"ERASER\") {\n            this.context.strokeStyle = this.eraserColor;\n            this.context.lineWidth = 50;\n        }\n        this.saveState();\n    }\n    getMousePosition (event) {\n        const boundaries = this.canvasEl.getBoundingClientRect();\n        return {\n            x: event.clientX - boundaries.left,\n            y: event.clientY - boundaries.top,\n        }\n    }\n    onClickBrush(event) {\n        const isActive = event.currentTarget.classList.contains(\"active\");\n        this.MODE = isActive ? \"NONE\" : \"BRUSH\";\n        this.canvasEl.style.cursor = isActive ? \"default\" : \"crosshair\";\n        this.brushPanelEl.classList.toggle(\"hide\");\n        event.currentTarget.classList.toggle(\"active\");\n        this.eraserEl.classList.remove(\"active\");\n    }\n}\nnew DrawingBoard();"],"names":[],"version":3,"file":"index.de5c0784.js.map","sourceRoot":"/__parcel_source_root/"}